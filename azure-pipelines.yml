trigger:
# defines what triggers the pipeline to run
  branches:
    include:
      - main # any pushes to main
  paths:
    exclude: # these files do not trigger the pipeline
    - 'README.md'
    - '.gitignore'

pool:
  name: 'ccse-2-agent'

variables:
  #pythonVersion: '3.12.10'
  pythonVersion: '3.12'
  SNYK_TOKEN: '19b1c0e8-d849-4ed2-b3af-38665726a2ba'

stages:
- stage: CI
  displayName: 'CI'
  jobs:

  - job: ci_job
    displayName: 'CI (Including Snyk Scan)'
    steps:

    - script: |
        sudo apt update
        sudo apt install -y python3 python3-pip
        python3 --version
        python3 -m pip --version
      displayName: 'Python and pip installation.'

    - script: |
        sudo apt install -y python3.12-venv
        python3 -m venv env
        source env/bin/activate
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'

    - script: |
        sudo apt install -y npm
        sudo npm install -g snyk

      displayName: 'Install Snyk CLI'

    - script: |
        snyk auth $(SNYK_TOKEN)
      displayName: 'Authenticate Snyk'

    - script: |
        snyk test --file=requirements.txt --severity-threshold=high --command=$(System.DefaultWorkingDirectory)/env/bin/python
        snyk code test --severity-threshold=high
      displayName: 'Run Snyk Scan'

- stage: CD
  displayName: 'CD (Inclueding Zap)'
  jobs:

  - job: Build
    displayName: 'Build'

    steps:

    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        containerRegistry: 'dockerhub'
        repository: 'tuzzle/ccse-2'
        dockerfile: dockerfile
        tags: |
          latest


  - job: Deploy
    displayName: 'Deploy'

    steps:

    - script: |
        docker stop Azure-VM-SecureCart || true
        docker rm Azure-VM-SecureCart || true
        docker pull tuzzle/ccse-2:latest
        docker run -d --name Azure-VM-SecureCart -p 8000:8000 tuzzle/ccse-2:latest
      displayName: 'Deploy'
      
  - job: Zap
    displayName: 'Zap Scan'

    steps:

    - script: |

        docker run -t owasp/zap2docker-stable zap-baseline.py \
        -t http://localhost:8000 \
        -g gen.conf \
        -r zap_report.html \
        -J zap_report.json \
        -x zap_report.xml
      displayName: 'Zap Scan'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/zap_report.html'
        artifact: 'zapReport'
        publishLocation: 'pipeline'
      displayName: 'Publish Zap Report'     



